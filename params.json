{"name":"Mixpanel-celery","tagline":"Asynchronous event tracking for Mixpanel using Celery","body":"# mixpanel-celery\r\n\r\nAsynchronous event tracking for Mixpanel\r\n\r\n[![Build Status](https://travis-ci.org/winhamwr/mixpanel-celery.png?branch=master)](https://travis-ci.org/winhamwr/mixpanel-celery)\r\n\r\nmixpanel-celery helps you use [Celery](http://celeryproject.org)\r\nto asynchronously track your\r\n[Mixpanel](http://mixpanel.com) events.\r\nWaiting on HTTP requests to Mixpanel's api to complete\r\nevery time you want to record something slows you down.\r\nUsing mixpanel-celery gives you all of the Mixpanel goodness\r\nwithout any of the potential performance impact.\r\n\r\n## Works wherever Celery works\r\n\r\nmixpanel-celery works great with Django,\r\nbut because Celery works with just python,\r\nso does mixpanel-celery.\r\n\r\n## But how do I do the thing?\r\n\r\nI'll tell you how!\r\nHave Celery running and want to asynchronously track an event?\r\nIs your event called `my_event`?\r\nYou're in luck!\r\n\r\n```python\r\nfrom mixpanel.tasks import EventTracker\r\n\r\nEventTracker.delay(\r\n    'my_event',\r\n    {'distinct_id': 1},\r\n    token='YOUR_API_TOKEN',\r\n)\r\n```\r\n\r\nBoom.\r\nOnce your Celery worker gets hold of that bad boy, it's tracked.\r\n\r\n## Full-on Docs\r\n\r\nWould you like to know more?\r\nWell then you should [read the docs](http://mixpanel-celery.readthedocs.org),\r\n[citizen](http://tvtropes.org/pmwiki/pmwiki.php/Film/StarshipTroopers).\r\n\r\n## Contributing\r\n\r\nWe love pull requests!\r\nSend us one, and you'll probably make Wes's day.\r\n\r\nFor details,\r\ncheck out the\r\n[contribution tips](http://mixpanel-celery.readthedocs.org/en/latest/contributing.html)\r\ndocumentation.\r\n\r\n## We like Mixpanel and Celery\r\n\r\nThis project isn't affiliated with the Mixpanel company.\r\nJust a customer's implementation of a client for their service.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}